name: Terraform Deploy to AWS

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  terraform:
    runs-on: ubuntu-latest
    env:
      AWS_REGION: ${{ secrets.AWS_REGION }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v2
        with:
          terraform_version: 1.13.2

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: ${{ secrets.AWS_REGION }}

      - name: Terraform Init (S3 backend)
        run: terraform init -input=false -upgrade

      - name: Check for Terraform State Lock
        id: check-lock
        run: |
          LOCK_FILE=$(terraform state pull | grep '"ID":' | head -n1 | awk -F'"' '{print $4}' || echo "")
          if [ -n "$LOCK_FILE" ]; then
            echo "Terraform lock detected: $LOCK_FILE"
            echo "force_unlock=true" >> $GITHUB_ENV
          else
            echo "No active lock detected"
            echo "force_unlock=false" >> $GITHUB_ENV
          fi

      - name: Force Unlock if Needed
        if: env.force_unlock == 'true'
        run: |
          echo "Force unlocking Terraform state..."
          terraform force-unlock -force $LOCK_FILE

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        run: terraform plan -out=tfplan -input=false

      - name: Terraform Apply
        run: terraform apply -auto-approve tfplan